name: PR Merge (prod)

on:
  pull_request:
    types: [edited]
    branches: [prod]
  issue_comment:
    types: [created]

env:
  WORKSPACE_ROOT: .
  ENVIRONMENT: prod

# Cancel redundant workflow runs
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  fast_forward_job:
    name: Fast Forward
    if: github.event.issue.pull_request && contains(github.event.comment.body, '/ff')
    runs-on: ubuntu-22.04
    steps:
      # To use this repository's private action, you must check out the repository
      - name: Checkout code into workspace directory
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false
      # Basic use case example
      - name: Fast Forward PR
        id: ff-action
        uses: samatechtw/fast-forward-js-action@master
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          success_message: 'Success! Fast forwarded `prod` to `main` with ```git checkout prod && git merge main --ff-only```'
          failure_message: 'Failed! Cannot fast forward!'
          staging_branch: 'main'
          production_branch: 'prod'

  pre_job:
    needs: fast_forward_job
    name: Run Workflow?
    runs-on: ubuntu-22.04
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@master
        with:
          concurrent_skipping: 'never'
          skip_after_successful_duplicate: 'true'
          # Changes to paths must be synced with pr-merge*.yml
          paths: '[".github/workflows/pr-commit.yml", "src/**", "*"]'
          paths_ignore: '["**/README.md", "skaffold*.yaml"]'

  repo-metadata:
    needs: pre_job
    if: ${{ needs.pre_job.outputs.should_skip != 'true' }}
    name: Get repo metadata
    runs-on: ubuntu-latest
    outputs:
      next_version: ${{ steps.meta.outputs.next_version }}
      sha8: ${{ steps.meta.outputs.sha8 }}
      repo_slug: ${{ steps.meta.outputs.repo_slug }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false
      - id: meta
        uses: ./.github/actions/repo-metadata
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

  build-docker-builder-demo-prod:
    needs: [pre_job, repo-metadata]
    if: ${{ needs.pre_job.outputs.should_skip != 'true' }}
    name: Builder Demo Production Image
    runs-on: ubuntu-22.04
    env:
      APP_NAME: builder-demo
      BRANCH_NAME: main
    steps:
      - name: Checkout code into workspace directory
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{github.actor}}
          password: ${{secrets.GITHUB_TOKEN}}
      - name: Build and push production docker image
        id: docker_build
        uses: docker/build-push-action@v4
        with:
          context: ${{env.WORKSPACE_ROOT}}
          build-args: |
            "LAST_COMMIT_SHA=${{needs.repo-metadata.outputs.sha8}}"
            "RELEASE_VERSION=${{needs.repo-metadata.outputs.next_version}}"
          push: true
          file: ${{env.WORKSPACE_ROOT}}/Dockerfile
          target: prod
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{needs.repo-metadata.outputs.repo_slug}}/${{env.ENVIRONMENT}}/${{env.APP_NAME}}:${{env.BRANCH_NAME}}-${{needs.repo-metadata.outputs.sha8}}-${{github.run_number}}
            ${{needs.repo-metadata.outputs.repo_slug}}/${{env.ENVIRONMENT}}/${{env.APP_NAME}}:latest

  release:
    needs:
      - build-docker-builder-demo-prod
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false
      - name: Set up NodeJS (LTS)
        uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'
      - name: Install dependencies
        run: |
          npm install -g semantic-release@23
          npm install -g @semantic-release/changelog
          npm install -g conventional-changelog-conventionalcommits
      - name: Release
        env:
          # Default GITHUB_TOKEN is OK as long as there no workflows triggered
          # on "create release" event as the latter will not be emitted.
          # See https://github.com/semantic-release/github
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git branch -avv
          npx semantic-release --debug
